<?php

/**
 * @file
 * Contains social_scroll.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\social_scroll\SocialScrollManagerInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @param mixed[] $form
 *   An associative array containing the structure of the form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 */
function social_scroll_form_view_edit_form_alter(array &$form, FormStateInterface $form_state): void {
  /** @var \Drupal\social_scroll\SocialScrollManagerInterface $social_scroll_manager */
  $social_scroll_manager = \Drupal::service('social_scroll.manager');
  $enabled_views = array_keys($social_scroll_manager->getEnabledViewIds());
  $display_id = $form_state->get('display_id');

  foreach ($enabled_views as $view) {
    $config_name = $social_scroll_manager->getConfigName($view);
    $current_view = \Drupal::configFactory()->getEditable($config_name);
    $displays = $current_view->getOriginal('display');
    $pages = [];

    if (is_array($displays)) {
      foreach ($displays as $id => $display) {
        if ($display['display_plugin'] !== 'block') {
          $pages[] = $id;
        }
      }
    }

    if (in_array($display_id, $pages)) {
      // Hide the pager block if this view is overridden by this module.
      $form['displays']['settings']['settings_content']['tab_content']['details']['columns']['second']['pager']['#access'] = FALSE;
      /** @var \Drupal\views_ui\ViewEditForm $form_object */
      $form_object = $form_state->getFormObject();
      $module_name = \Drupal::moduleHandler()->getName(SocialScrollManagerInterface::MODULE_NAME);

      $form_object->messenger()
        ->addWarning(t('Pager options are overridden by the "@module_name" module, so pager settings configured in this view will not work while that view is selected in @these options.', [
          '@module_name' => $module_name,
          '@these' => Link::createFromRoute(t('these'), 'social_scroll.settings')
            ->toString(),
        ]));
    }
  }
}
